/*
扩展：790题
浮点数二分
优化问题直接下手不容易
先将优化问题变成二分判定问题，每次从L到R进行考虑，考虑mid能否满足分出M条，若能，则结果定在mid和R之间，若不能满足，则结果定在mid和L之间
*/
#include <iostream>
#include <algorithm>

using namespace std;
int n,m;
const int MAX=100005;
int a[MAX];
bool check(double mid){
    int count=0;
    for(int i=0;i<n;i++){
        count=count+a[i]/mid;
    }
    return count>=m;
}
int main(){
    cin>>n>>m;
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    
    double l=0,r=1e9;
    while(r-l>1e-4){//处理精度
        double mid=(l+r)/2;
        if(check(mid)){//检查当前mid是否满足题目条件，满足就在mid和r之间
            l=mid;
        }else{
            r=mid;//不满足则在mid和l之间
        }
    }
    printf("%.2lf\n",l);
    return 0;
}
