/*
映射为二进制 
用一个二进制数来表示幂的和的形式，例如3的0次方+3的2次方+3的3次方表示为1101
数学定理证明：3^0+3^1+....3^n-1<3^n，由于存在这个结论，所以只需要比较映射的二进制数大小即可，将二进制数一位一位比
其中一位为1，则对应乘i次幂并累加求和

*/
#include<bits/stdc++.h>

using namespace std;

int k;
int N;
int power(int a,int b){
    int res=1;
    while(b--){
        res=res*a;
    }
    return res;
}
int main(){
    cin>>k>>N;
    int res=0;
    for(int i=0;i<10;i++){
        if(N>>i&1){
            res=res+power(k,i);
        }
    }
    cout<<res<<endl;
    return 0;
}
