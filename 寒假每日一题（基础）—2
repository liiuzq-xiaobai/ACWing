/*
    DP 
    自底向上考虑(尤其重要，如果是自顶向下就会多一些边界条件的特判)
    递归方程：f[i][j]=v[n][i]    (i=n,j<=n)
              f[i][j]=max(f[i+1][j],f[i+1][j+1])+v[i][j]   (i<n,j<=n)
*/
#include <iostream>
#include <cstring>
#include <algorithm>
#include <sstream>

using namespace std;
const int MAX=510;
int n;
int v[MAX][MAX],f[MAX][MAX];
int main(){
    cin>>n;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=i;j++){
            cin>>v[i][j];
        }
    }
    for(int j=1;j<=n;j++){
        f[n][j]=v[n][j];
    }
    for(int i=n-1;i>=1;i--){
        for(int j=1;j<=n;j++){
             f[i][j]=v[i][j]+max(f[i+1][j],f[i+1][j+1]);
        }
    }
    int res=f[1][1];
    cout<<res<<endl;
    return 0;
}
