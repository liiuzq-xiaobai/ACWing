/*
核心：1.进制转换2.双指针回文检测
*/
#include <iostream>
#include <cstring>
#include <algorithm>
#include <sstream>

using namespace std;

int b;
char change(int x){//把数字转换成字母
    if(x<=9){//注意写法，非常实用
        return x+'0';
    }else{
        return x-10+'A';
    }
}
int  chartonum(char c){//字母转数字
    if(c<='9'){
        return c-'0';
    }else{
        return c-'A'+10;
    }
}
string base10(string num,int b){//其他进制转十进制
    int res=0;
    for(auto c:num){
        res=res*b+chartonum(c);
    }
}
string base(int n,int b){//核心写法:十进制转其他进制
    string num;
    while(n){//短除法进行进制转换并存储，但注意存储的时候由于短除法最后是由低到高进行存储，但此处while循环内正好反过来，所以最后要reverse一下
        num=num+change(n%b);
        n=n/b;
    }
    reverse(num.begin(),num.end());
    return num;
}
bool check(string num){
    for(int i=0,j=num.size()-1;i<j;i++,j--){//双指针头尾相遇检测
        if(num[i]!=num[j]){
            return false;
        }
    }
    return true;
}
int main(){
    cin>>b;
    for(int i=1;i<=300;i++){
        auto num=base(i*i,b);
        if(check(num)){
            cout<<base(i,b)<<" "<<num<<endl;
        }
    }
}
